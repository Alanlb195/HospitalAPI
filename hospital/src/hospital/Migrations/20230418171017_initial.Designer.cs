// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hospital.Models.HospitalDB;

#nullable disable

namespace hospital.Migrations
{
    [DbContext(typeof(dbExamen1Context))]
    [Migration("20230418171017_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Modern_Spanish_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("hospital.Models.HospitalDB.TblEspecialidad", b =>
                {
                    b.Property<int>("PkEspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkEspecialidadID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkEspecialidadId"), 1L, 1);

                    b.Property<string>("CodigoEspecialidad")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength()
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkEspecialidadId");

                    b.ToTable("tblEspecialidad", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblHistorialClinico", b =>
                {
                    b.Property<int>("PkHitorialClinicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkHitorialClinicoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkHitorialClinicoId"), 1L, 1);

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<DateTime>("DtFechaConsulta")
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaConsulta");

                    b.Property<double?>("Estatura")
                        .HasColumnType("float");

                    b.Property<int>("FkMedicoId")
                        .HasColumnType("int")
                        .HasColumnName("fkMedicoID");

                    b.Property<int>("FkPacienteId")
                        .HasColumnType("int")
                        .HasColumnName("fkPacienteID");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<double?>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Sitomas")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<double?>("TemperaturaCorporal")
                        .HasColumnType("float");

                    b.HasKey("PkHitorialClinicoId");

                    b.HasIndex("FkMedicoId");

                    b.HasIndex("FkPacienteId");

                    b.ToTable("tblHistorialClinico", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedicamento", b =>
                {
                    b.Property<int>("PkMedicamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkMedicamentoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkMedicamentoId"), 1L, 1);

                    b.Property<string>("CodigoMedicamento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength()
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkMedicamentoId");

                    b.ToTable("tblMedicamento", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedicamentosRecetum", b =>
                {
                    b.Property<int>("PkMedicametosRecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkMedicametosRecetaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkMedicametosRecetaId"), 1L, 1);

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short>("Dosis")
                        .HasColumnType("smallint");

                    b.Property<int>("FkMedicamentoId")
                        .HasColumnType("int")
                        .HasColumnName("fkMedicamentoID");

                    b.Property<int>("FkRecetaId")
                        .HasColumnType("int")
                        .HasColumnName("fkRecetaID");

                    b.Property<int>("FkTipoDosis")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoDosis");

                    b.Property<int>("FkTipoLapsoId")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoLapsoID");

                    b.Property<short>("Lapso")
                        .HasColumnType("smallint");

                    b.HasKey("PkMedicametosRecetaId");

                    b.HasIndex("FkMedicamentoId");

                    b.HasIndex("FkRecetaId");

                    b.HasIndex("FkTipoDosis");

                    b.HasIndex("FkTipoLapsoId");

                    b.ToTable("tblMedicamentosReceta", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedico", b =>
                {
                    b.Property<int>("PkMedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkMedicoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkMedicoId"), 1L, 1);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("CedulaProfesional")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength()
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("FkEspecialidadId")
                        .HasColumnType("int")
                        .HasColumnName("fkEspecialidadID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkMedicoId");

                    b.HasIndex("FkEspecialidadId");

                    b.ToTable("tblMedico", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblPaciente", b =>
                {
                    b.Property<int>("PkPacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkPacienteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPacienteId"), 1L, 1);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Domicillio")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkPacienteId")
                        .HasName("PK_tblMedicos");

                    b.ToTable("tblPaciente", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblRecetum", b =>
                {
                    b.Property<int>("PkRecetaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkRecetaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkRecetaId"), 1L, 1);

                    b.Property<short>("Cada")
                        .HasColumnType("smallint");

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<short>("Dosis")
                        .HasColumnType("smallint");

                    b.Property<int>("FkHistorialClinicoId")
                        .HasColumnType("int")
                        .HasColumnName("fkHistorialClinicoID");

                    b.Property<int>("FkMedicamentoId")
                        .HasColumnType("int")
                        .HasColumnName("fkMedicamentoID");

                    b.Property<int>("FkTipoDosisId")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoDosisID");

                    b.Property<int>("FkTipoLapsoId")
                        .HasColumnType("int")
                        .HasColumnName("fkTipoLapsoID");

                    b.HasKey("PkRecetaId");

                    b.HasIndex("FkHistorialClinicoId");

                    b.ToTable("tblReceta", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblTipoDosi", b =>
                {
                    b.Property<int>("PkTipoDosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkTipoDosisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkTipoDosisId"), 1L, 1);

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkTipoDosisId");

                    b.ToTable("tblTipoDosis", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblTipoLapso", b =>
                {
                    b.Property<int>("PkTipoLapsoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pkTipoLapsoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkTipoLapsoId"), 1L, 1);

                    b.Property<int>("CrBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("(user_id())");

                    b.Property<DateTime>("CrDt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .UseCollation("Traditional_Spanish_CI_AS");

                    b.HasKey("PkTipoLapsoId");

                    b.ToTable("tblTipoLapso", (string)null);
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblHistorialClinico", b =>
                {
                    b.HasOne("hospital.Models.HospitalDB.TblMedico", "FkMedico")
                        .WithMany("TblHistorialClinicos")
                        .HasForeignKey("FkMedicoId")
                        .IsRequired()
                        .HasConstraintName("FK_tblHistorialClinico_tblMedico");

                    b.HasOne("hospital.Models.HospitalDB.TblPaciente", "FkPaciente")
                        .WithMany("TblHistorialClinicos")
                        .HasForeignKey("FkPacienteId")
                        .IsRequired()
                        .HasConstraintName("FK_tblHistorialClinico_tblPaciente");

                    b.Navigation("FkMedico");

                    b.Navigation("FkPaciente");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedicamentosRecetum", b =>
                {
                    b.HasOne("hospital.Models.HospitalDB.TblMedicamento", "FkMedicamento")
                        .WithMany("TblMedicamentosReceta")
                        .HasForeignKey("FkMedicamentoId")
                        .IsRequired()
                        .HasConstraintName("FK_tblMedicamentosReceta_tblMedicamento");

                    b.HasOne("hospital.Models.HospitalDB.TblRecetum", "FkReceta")
                        .WithMany("TblMedicamentosReceta")
                        .HasForeignKey("FkRecetaId")
                        .IsRequired()
                        .HasConstraintName("FK_tblMedicamentosReceta_tblReceta");

                    b.HasOne("hospital.Models.HospitalDB.TblTipoDosi", "FkTipoDosisNavigation")
                        .WithMany("TblMedicamentosReceta")
                        .HasForeignKey("FkTipoDosis")
                        .IsRequired()
                        .HasConstraintName("FK_tblMedicamentosReceta_tblTipoDosis");

                    b.HasOne("hospital.Models.HospitalDB.TblTipoLapso", "FkTipoLapso")
                        .WithMany("TblMedicamentosReceta")
                        .HasForeignKey("FkTipoLapsoId")
                        .IsRequired()
                        .HasConstraintName("FK_tblMedicamentosReceta_tblTipoLapso");

                    b.Navigation("FkMedicamento");

                    b.Navigation("FkReceta");

                    b.Navigation("FkTipoDosisNavigation");

                    b.Navigation("FkTipoLapso");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedico", b =>
                {
                    b.HasOne("hospital.Models.HospitalDB.TblEspecialidad", "FkEspecialidad")
                        .WithMany("TblMedicos")
                        .HasForeignKey("FkEspecialidadId")
                        .IsRequired()
                        .HasConstraintName("FK_tblMedico_tblEspecialidad");

                    b.Navigation("FkEspecialidad");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblRecetum", b =>
                {
                    b.HasOne("hospital.Models.HospitalDB.TblHistorialClinico", "FkHistorialClinico")
                        .WithMany("TblReceta")
                        .HasForeignKey("FkHistorialClinicoId")
                        .IsRequired()
                        .HasConstraintName("FK_tblReceta_tblHistorialClinico");

                    b.Navigation("FkHistorialClinico");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblEspecialidad", b =>
                {
                    b.Navigation("TblMedicos");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblHistorialClinico", b =>
                {
                    b.Navigation("TblReceta");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedicamento", b =>
                {
                    b.Navigation("TblMedicamentosReceta");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblMedico", b =>
                {
                    b.Navigation("TblHistorialClinicos");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblPaciente", b =>
                {
                    b.Navigation("TblHistorialClinicos");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblRecetum", b =>
                {
                    b.Navigation("TblMedicamentosReceta");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblTipoDosi", b =>
                {
                    b.Navigation("TblMedicamentosReceta");
                });

            modelBuilder.Entity("hospital.Models.HospitalDB.TblTipoLapso", b =>
                {
                    b.Navigation("TblMedicamentosReceta");
                });
#pragma warning restore 612, 618
        }
    }
}
